// Generated by view binder compiler. Do not edit!
package afisha.arzan.tm.databinding;

import afisha.arzan.tm.R;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemOfficialLargeBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView about;

  @NonNull
  public final TextView follow;

  @NonNull
  public final RelativeLayout followBtn;

  @NonNull
  public final CircleImageView userimage;

  @NonNull
  public final TextView username;

  private ItemOfficialLargeBinding(@NonNull ConstraintLayout rootView, @NonNull TextView about,
      @NonNull TextView follow, @NonNull RelativeLayout followBtn,
      @NonNull CircleImageView userimage, @NonNull TextView username) {
    this.rootView = rootView;
    this.about = about;
    this.follow = follow;
    this.followBtn = followBtn;
    this.userimage = userimage;
    this.username = username;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemOfficialLargeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemOfficialLargeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_official_large, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemOfficialLargeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.about;
      TextView about = rootView.findViewById(id);
      if (about == null) {
        break missingId;
      }

      id = R.id.follow;
      TextView follow = rootView.findViewById(id);
      if (follow == null) {
        break missingId;
      }

      id = R.id.follow_btn;
      RelativeLayout followBtn = rootView.findViewById(id);
      if (followBtn == null) {
        break missingId;
      }

      id = R.id.userimage;
      CircleImageView userimage = rootView.findViewById(id);
      if (userimage == null) {
        break missingId;
      }

      id = R.id.username;
      TextView username = rootView.findViewById(id);
      if (username == null) {
        break missingId;
      }

      return new ItemOfficialLargeBinding((ConstraintLayout) rootView, about, follow, followBtn,
          userimage, username);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
