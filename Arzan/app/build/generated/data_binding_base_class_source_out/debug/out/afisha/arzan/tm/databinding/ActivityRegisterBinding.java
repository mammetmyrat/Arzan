// Generated by view binder compiler. Do not edit!
package afisha.arzan.tm.databinding;

import afisha.arzan.tm.R;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.card.MaterialCardView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityRegisterBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView backBtn;

  @NonNull
  public final ImageView icon;

  @NonNull
  public final ImageView icon1;

  @NonNull
  public final ImageView icon2;

  @NonNull
  public final ImageView icon3;

  @NonNull
  public final LinearLayout line;

  @NonNull
  public final MaterialButton login;

  @NonNull
  public final EditText password;

  @NonNull
  public final EditText passwordConfirm;

  @NonNull
  public final EditText phone;

  @NonNull
  public final MaterialButton register;

  @NonNull
  public final TextView text;

  @NonNull
  public final MaterialCardView toolbar;

  @NonNull
  public final ImageView user;

  @NonNull
  public final EditText username;

  @NonNull
  public final ImageView visible;

  @NonNull
  public final ImageView visible1;

  private ActivityRegisterBinding(@NonNull ConstraintLayout rootView, @NonNull ImageView backBtn,
      @NonNull ImageView icon, @NonNull ImageView icon1, @NonNull ImageView icon2,
      @NonNull ImageView icon3, @NonNull LinearLayout line, @NonNull MaterialButton login,
      @NonNull EditText password, @NonNull EditText passwordConfirm, @NonNull EditText phone,
      @NonNull MaterialButton register, @NonNull TextView text, @NonNull MaterialCardView toolbar,
      @NonNull ImageView user, @NonNull EditText username, @NonNull ImageView visible,
      @NonNull ImageView visible1) {
    this.rootView = rootView;
    this.backBtn = backBtn;
    this.icon = icon;
    this.icon1 = icon1;
    this.icon2 = icon2;
    this.icon3 = icon3;
    this.line = line;
    this.login = login;
    this.password = password;
    this.passwordConfirm = passwordConfirm;
    this.phone = phone;
    this.register = register;
    this.text = text;
    this.toolbar = toolbar;
    this.user = user;
    this.username = username;
    this.visible = visible;
    this.visible1 = visible1;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityRegisterBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityRegisterBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_register, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityRegisterBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.back_btn;
      ImageView backBtn = rootView.findViewById(id);
      if (backBtn == null) {
        break missingId;
      }

      id = R.id.icon;
      ImageView icon = rootView.findViewById(id);
      if (icon == null) {
        break missingId;
      }

      id = R.id.icon1;
      ImageView icon1 = rootView.findViewById(id);
      if (icon1 == null) {
        break missingId;
      }

      id = R.id.icon2;
      ImageView icon2 = rootView.findViewById(id);
      if (icon2 == null) {
        break missingId;
      }

      id = R.id.icon3;
      ImageView icon3 = rootView.findViewById(id);
      if (icon3 == null) {
        break missingId;
      }

      id = R.id.line;
      LinearLayout line = rootView.findViewById(id);
      if (line == null) {
        break missingId;
      }

      id = R.id.login;
      MaterialButton login = rootView.findViewById(id);
      if (login == null) {
        break missingId;
      }

      id = R.id.password;
      EditText password = rootView.findViewById(id);
      if (password == null) {
        break missingId;
      }

      id = R.id.password_confirm;
      EditText passwordConfirm = rootView.findViewById(id);
      if (passwordConfirm == null) {
        break missingId;
      }

      id = R.id.phone;
      EditText phone = rootView.findViewById(id);
      if (phone == null) {
        break missingId;
      }

      id = R.id.register;
      MaterialButton register = rootView.findViewById(id);
      if (register == null) {
        break missingId;
      }

      id = R.id.text;
      TextView text = rootView.findViewById(id);
      if (text == null) {
        break missingId;
      }

      id = R.id.toolbar;
      MaterialCardView toolbar = rootView.findViewById(id);
      if (toolbar == null) {
        break missingId;
      }

      id = R.id.user;
      ImageView user = rootView.findViewById(id);
      if (user == null) {
        break missingId;
      }

      id = R.id.username;
      EditText username = rootView.findViewById(id);
      if (username == null) {
        break missingId;
      }

      id = R.id.visible;
      ImageView visible = rootView.findViewById(id);
      if (visible == null) {
        break missingId;
      }

      id = R.id.visible1;
      ImageView visible1 = rootView.findViewById(id);
      if (visible1 == null) {
        break missingId;
      }

      return new ActivityRegisterBinding((ConstraintLayout) rootView, backBtn, icon, icon1, icon2,
          icon3, line, login, password, passwordConfirm, phone, register, text, toolbar, user,
          username, visible, visible1);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
