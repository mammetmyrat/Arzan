// Generated by view binder compiler. Do not edit!
package afisha.arzan.tm.databinding;

import afisha.arzan.tm.R;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.core.widget.NestedScrollView;
import androidx.viewbinding.ViewBinding;
import com.google.android.material.appbar.AppBarLayout;
import com.google.android.material.appbar.CollapsingToolbarLayout;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.card.MaterialCardView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentFirstBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final TextView addCard;

  @NonNull
  public final AppBarLayout appBar;

  @NonNull
  public final LinearLayout banner;

  @NonNull
  public final MaterialCardView cardBg;

  @NonNull
  public final MaterialCardView cardImage;

  @NonNull
  public final MaterialCardView cardMain;

  @NonNull
  public final CollapsingToolbarLayout collapsingToolbarLayout;

  @NonNull
  public final ImageView icBanner;

  @NonNull
  public final ImageView icNotify;

  @NonNull
  public final ImageView icPost;

  @NonNull
  public final ImageView icProfile;

  @NonNull
  public final ImageView icVip;

  @NonNull
  public final ImageView image;

  @NonNull
  public final NestedScrollView nested;

  @NonNull
  public final MaterialButton next;

  @NonNull
  public final LinearLayout notification;

  @NonNull
  public final LinearLayout post;

  @NonNull
  public final LinearLayout profile;

  @NonNull
  public final LinearLayout recommended;

  @NonNull
  public final LinearLayout services;

  @NonNull
  public final TextView textBanner;

  @NonNull
  public final TextView textNotify;

  @NonNull
  public final TextView textPost;

  @NonNull
  public final TextView textProfile;

  @NonNull
  public final TextView textRecommend;

  @NonNull
  public final TextView title;

  @NonNull
  public final Toolbar toolbar;

  private FragmentFirstBinding(@NonNull CoordinatorLayout rootView, @NonNull TextView addCard,
      @NonNull AppBarLayout appBar, @NonNull LinearLayout banner, @NonNull MaterialCardView cardBg,
      @NonNull MaterialCardView cardImage, @NonNull MaterialCardView cardMain,
      @NonNull CollapsingToolbarLayout collapsingToolbarLayout, @NonNull ImageView icBanner,
      @NonNull ImageView icNotify, @NonNull ImageView icPost, @NonNull ImageView icProfile,
      @NonNull ImageView icVip, @NonNull ImageView image, @NonNull NestedScrollView nested,
      @NonNull MaterialButton next, @NonNull LinearLayout notification, @NonNull LinearLayout post,
      @NonNull LinearLayout profile, @NonNull LinearLayout recommended,
      @NonNull LinearLayout services, @NonNull TextView textBanner, @NonNull TextView textNotify,
      @NonNull TextView textPost, @NonNull TextView textProfile, @NonNull TextView textRecommend,
      @NonNull TextView title, @NonNull Toolbar toolbar) {
    this.rootView = rootView;
    this.addCard = addCard;
    this.appBar = appBar;
    this.banner = banner;
    this.cardBg = cardBg;
    this.cardImage = cardImage;
    this.cardMain = cardMain;
    this.collapsingToolbarLayout = collapsingToolbarLayout;
    this.icBanner = icBanner;
    this.icNotify = icNotify;
    this.icPost = icPost;
    this.icProfile = icProfile;
    this.icVip = icVip;
    this.image = image;
    this.nested = nested;
    this.next = next;
    this.notification = notification;
    this.post = post;
    this.profile = profile;
    this.recommended = recommended;
    this.services = services;
    this.textBanner = textBanner;
    this.textNotify = textNotify;
    this.textPost = textPost;
    this.textProfile = textProfile;
    this.textRecommend = textRecommend;
    this.title = title;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentFirstBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentFirstBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_first, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentFirstBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.add_card;
      TextView addCard = rootView.findViewById(id);
      if (addCard == null) {
        break missingId;
      }

      id = R.id.appBar;
      AppBarLayout appBar = rootView.findViewById(id);
      if (appBar == null) {
        break missingId;
      }

      id = R.id.banner;
      LinearLayout banner = rootView.findViewById(id);
      if (banner == null) {
        break missingId;
      }

      id = R.id.card_bg;
      MaterialCardView cardBg = rootView.findViewById(id);
      if (cardBg == null) {
        break missingId;
      }

      id = R.id.card_image;
      MaterialCardView cardImage = rootView.findViewById(id);
      if (cardImage == null) {
        break missingId;
      }

      id = R.id.card_main;
      MaterialCardView cardMain = rootView.findViewById(id);
      if (cardMain == null) {
        break missingId;
      }

      id = R.id.collapsing_toolbar_layout;
      CollapsingToolbarLayout collapsingToolbarLayout = rootView.findViewById(id);
      if (collapsingToolbarLayout == null) {
        break missingId;
      }

      id = R.id.ic_banner;
      ImageView icBanner = rootView.findViewById(id);
      if (icBanner == null) {
        break missingId;
      }

      id = R.id.ic_notify;
      ImageView icNotify = rootView.findViewById(id);
      if (icNotify == null) {
        break missingId;
      }

      id = R.id.ic_post;
      ImageView icPost = rootView.findViewById(id);
      if (icPost == null) {
        break missingId;
      }

      id = R.id.ic_profile;
      ImageView icProfile = rootView.findViewById(id);
      if (icProfile == null) {
        break missingId;
      }

      id = R.id.ic_vip;
      ImageView icVip = rootView.findViewById(id);
      if (icVip == null) {
        break missingId;
      }

      id = R.id.image;
      ImageView image = rootView.findViewById(id);
      if (image == null) {
        break missingId;
      }

      id = R.id.nested;
      NestedScrollView nested = rootView.findViewById(id);
      if (nested == null) {
        break missingId;
      }

      id = R.id.next;
      MaterialButton next = rootView.findViewById(id);
      if (next == null) {
        break missingId;
      }

      id = R.id.notification;
      LinearLayout notification = rootView.findViewById(id);
      if (notification == null) {
        break missingId;
      }

      id = R.id.post;
      LinearLayout post = rootView.findViewById(id);
      if (post == null) {
        break missingId;
      }

      id = R.id.profile;
      LinearLayout profile = rootView.findViewById(id);
      if (profile == null) {
        break missingId;
      }

      id = R.id.recommended;
      LinearLayout recommended = rootView.findViewById(id);
      if (recommended == null) {
        break missingId;
      }

      id = R.id.services;
      LinearLayout services = rootView.findViewById(id);
      if (services == null) {
        break missingId;
      }

      id = R.id.textBanner;
      TextView textBanner = rootView.findViewById(id);
      if (textBanner == null) {
        break missingId;
      }

      id = R.id.textNotify;
      TextView textNotify = rootView.findViewById(id);
      if (textNotify == null) {
        break missingId;
      }

      id = R.id.textPost;
      TextView textPost = rootView.findViewById(id);
      if (textPost == null) {
        break missingId;
      }

      id = R.id.textProfile;
      TextView textProfile = rootView.findViewById(id);
      if (textProfile == null) {
        break missingId;
      }

      id = R.id.textRecommend;
      TextView textRecommend = rootView.findViewById(id);
      if (textRecommend == null) {
        break missingId;
      }

      id = R.id.title;
      TextView title = rootView.findViewById(id);
      if (title == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = rootView.findViewById(id);
      if (toolbar == null) {
        break missingId;
      }

      return new FragmentFirstBinding((CoordinatorLayout) rootView, addCard, appBar, banner, cardBg,
          cardImage, cardMain, collapsingToolbarLayout, icBanner, icNotify, icPost, icProfile,
          icVip, image, nested, next, notification, post, profile, recommended, services,
          textBanner, textNotify, textPost, textProfile, textRecommend, title, toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
