// Generated by view binder compiler. Do not edit!
package afisha.arzan.tm.databinding;

import afisha.arzan.tm.R;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.google.android.material.card.MaterialCardView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemConfirmPostBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final MaterialCardView cardImage;

  @NonNull
  public final TextView createdAt;

  @NonNull
  public final TextView desc;

  @NonNull
  public final ImageView image;

  @NonNull
  public final ImageView more;

  @NonNull
  public final TextView title;

  private ItemConfirmPostBinding(@NonNull ConstraintLayout rootView,
      @NonNull MaterialCardView cardImage, @NonNull TextView createdAt, @NonNull TextView desc,
      @NonNull ImageView image, @NonNull ImageView more, @NonNull TextView title) {
    this.rootView = rootView;
    this.cardImage = cardImage;
    this.createdAt = createdAt;
    this.desc = desc;
    this.image = image;
    this.more = more;
    this.title = title;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemConfirmPostBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemConfirmPostBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_confirm_post, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemConfirmPostBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.card_image;
      MaterialCardView cardImage = rootView.findViewById(id);
      if (cardImage == null) {
        break missingId;
      }

      id = R.id.createdAt;
      TextView createdAt = rootView.findViewById(id);
      if (createdAt == null) {
        break missingId;
      }

      id = R.id.desc;
      TextView desc = rootView.findViewById(id);
      if (desc == null) {
        break missingId;
      }

      id = R.id.image;
      ImageView image = rootView.findViewById(id);
      if (image == null) {
        break missingId;
      }

      id = R.id.more;
      ImageView more = rootView.findViewById(id);
      if (more == null) {
        break missingId;
      }

      id = R.id.title;
      TextView title = rootView.findViewById(id);
      if (title == null) {
        break missingId;
      }

      return new ItemConfirmPostBinding((ConstraintLayout) rootView, cardImage, createdAt, desc,
          image, more, title);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
